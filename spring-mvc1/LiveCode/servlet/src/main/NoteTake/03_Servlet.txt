HTTP 요청 메시지를 편리하게 조회할 수 있다.
-> 서블릿이 request 메시지를 편리하게 파싱해줌

요청 메시지 객체 -> (HTTP request message)

- 바디
1. request.getParameter() 와 같이 메시지를 읽어주는 다양한 편의 기능들을 제공해준다.


HTTP 요청 데이터 3가지 방식 Client -> Server

1.GET -> 쿼리 파라미터
 메시지 바디가 없이 URL에 쿼리 파라미터 데이터를 포함해서 전달한다 -> Google 검색
 검색이나 필터에서 자주 사용한다

2.POST -> HTML Form (회원정보)
    브라우저가 자동으로 HTTP 메시지를 생성해준다.
    - 메시지 바디에 데이터를 넣는다 -> 쿼리 파라미터랑 비슷하게 생김(오해하면 안된다)
    -> 1번 방법과 조회 할 때 비슷한 방법이다.
3.HTTP message body에 직접 데이터를 담아서 요청 -> REST API
    - JSON방식으로 자주 사용한다.


=> Client to Server -> 이 세가지에서 벗어나지 않는다.

1. GET 쿼리 파라미터 조회하기

* 단일 파라미터를 조회할 때 -> 중복으로 같은 이름의 파라미터가 쿼리스트링으로 넘어오면 -> 내부 우선순위에 의해서 하나만 출력된다.

파라미터 이름은 하나인데 값은 여러개이면 우짜나...
중복일때는 배열로 받아서 사용하도록하자 [getParameterValue s]
그런데 대부분은 단일 파라미터로 보낸다.


2.POST의 Form 데이터를 요청받는 방법
형식이 같기 때문에 request.getParameter()로 전부 똑같이 꺼낼 수 있다.

요청파라미터로 주는 경우에는 똑같이 문제를 해결할 수 있다.

3.API 메시지 바디 -> 단순 텍스트
HTTP 메시지 바디에 내가 원하는 메시지를 직접 실어서 상대방에게 전송한다.
최근에는 JSON 방식으로 메시지를 보는 것이 Default이다.

-> POST, PUT, PATCH가 주로 쓰인다.

JSON형식을 그대로 읽어오는 것이 아니라 파싱해서 객체로 등록해서 사용한다.



-HttpServletResponse
HTTP 응답코드 지정
헤더 생성
바디 생성

편의 기능 -> 쿠키 넣기, Redirect, Content-Type
response 객체에 세팅하면 WAS가 알아서 메시지를 생성해준다.




