- 프론트 컨트롤러(서블릿) -> 공통 관심사를 별도로 만들어서 제공 나머지 개별 기능의 컨트롤러는 뒤로 미룬다.
- 입구를 하나로 만들어서 공통처리가 프론트 컨트롤러를 통해서 처리할 수 있다.
-> 나머지 컨트롤러는 서블릿을 더 이상 사용하지 않아도 된다... ! !

스프링 MVC 패턴의 핵심이 frontController -> DispatcherServlet이 앞에서 프론트 컨트롤러 패턴으로 구현되어서 앞에서 처리해준다.

[V1] -> 다형성을 적극적으로 활용해봅시다 공통 전처리를 수행해주는 프론트 컨트롤러 생성
[V2] -> View를 분리해본다. 모든 컨트롤러 부분에서 뷰로 이동하는 부분에서 중복이 존재했다. -> 이를 깔끔하게 분리하기 위해서 별도의 객체 생성한다.
        컨트롤러에서 직접 뷰로 포워딩을 해주는 것이 아니라 -> My view가 JSP를 호출해준다. 컨트롤러가 뷰에 대해서 추상적인 것에 의존하는 것이다.
[V3] ->